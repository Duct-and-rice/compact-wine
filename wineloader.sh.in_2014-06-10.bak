#!/bin/ksh -e

! (($DEBUG)) || set -x
! (($WINELOADERNOEXEC)) || exec $WINE "$@"

case $0 in
*/*) prefix=`cd "${0%/*}"/.. && pwd` ;;
*  ) prefix=`cd           .. && pwd` ;;
esac

set -a
LANG=${LANG-ja_JP.UTF-8}
PATH=$prefix/libexec:$prefix/bin:/usr/bin:/bin
WINE=$prefix/libexec/wine
WINEPREFIX=${WINEPREFIX:-$HOME/.wine}
WINEDEBUG=${WINEDEBUG-fixme-all}
XDG_CACHE_HOME=${XDG_CACHE_HOME-$HOME/Library/Caches/Wine}
XDG_CONFIG_HOME=${XDG_CONFIG_HOME-$HOME/Library/Caches/Wine}
XDG_DATA_HOME=${XDG_DATA_HOME-$HOME/Library/Caches/Wine}
set +a

case $1 in
''|--help|--version)
    exec $WINE "$@"
    ;;
esac

message()
{
    printf '%s\n' "$*" >&2
}
usage()
{
    echo "\
Wine - Nihonshu binary edition

使用方法:
  wine プログラムファイル名 [...]
  [DEBUG=1] [GRAPHICS=<type>] wine [-hz] [-gGs] プログラムファイル名 [...]

環境変数:
  DEBUG=1         : シェルのデバッグオプションを有効にします。
  GRAPHICS=<type> : グラフィックスドライバのモードを <type> に変更します。
                    有効な値は 'mac'（デフォルト）または 'x11' です。

オプション:
  -h : このヘルプを表示します。
  -z : $WINEPREFIX のアーカイブを作成します。
       アプリケーションによってはこれ以外の場所にファイルを作成していることが
       あるため完全なバックアップではないことに注意してください。

  -g : グラッフィクスドライバのモードを mac に変更します。（デフォルト）
  -G : グラッフィクスドライバのモードを x11 に変更します。
       XQuartz.app がインストールされていない場合、このモードは使用できない
       可能性があります。
  -o : $WINEPREFIX を Finder に表示します。
  -s : プログラムは 'start /unix' 経由で実行されます。

  環境変数 GRAPHICS が設定されている場合、'-g|-G' は無視されます。

注釈:
  これらは正規の Wine のオプションではありません。Wine のヘルプを表示する場合は '--help' を指定してください。
  オプションは予期せず変更されることがあります。"
}
check_graphics()
{
    _update_graphics()
    {
        $WINE 'C:\windows\regedit.exe' - <<!
[HKEY_CURRENT_USER\\Software\\Wine\\Drivers]
"Graphics"="$GRAPHICS"
!
    }

    case $GRAPHICS in
    '')
        return 0
        ;;
    mac|x11)
        _update_graphics
        ;;
    *)
        message "GRAPHICS の値 '$GRAPHICS' は設定値として適切ではありません。'mac' または 'x11' で指定してください。"
    esac
}
check_timestamp()
{
    _install_inf()
    {
        for f in "$prefix"/share/wine/inf/*.inf
        {
            test -f "$f" || continue
            $WINE 'C:\windows\system32\rundll32.exe' \
              setupapi,InstallHinfSection DefaultInstall 128 \
              '\\?\'unix"$f"
        }
    }

    read timestamp_ctime 2>/dev/null <"$WINEPREFIX"/.update-timestamp || :
    case ${timestamp_ctime:+set} in
    set)
        ((`stat -f inf_ctime=%c -t %s "$prefix"/share/wine/wine.inf`))
        (($timestamp_ctime < $inf_ctime)) || return 0
    esac

    _install_inf
}
test_wineprefix_exists()
{
    test -f "$WINEPREFIX"/.update-timestamp
}
message_wineprefix_not_exists()
{
    message "$WINEPREFIX がまだ作成されていない可能性があります。"
}
backup_wineprefix()
{
    if ! test_wineprefix_exists
    then
        message_wineprefix_not_exists
        return 1
    fi

    src_path=$WINEPREFIX
    src_dirname=`dirname "$src_path"`
    src_basename=`basename "$src_path"`
    dst_path=$src_dirname/wineprefix_`date +%Y%m%d%H%M%S`.tar.gz

    du -Hhs "$WINEPREFIX"
    message "WINEPREFIX のアーカイブを作成しています..."
    message "中断する場合は Control + C を押してください..."
    message "$src_path => $dst_path"
    tar cf - -C "$src_dirname" "$src_basename" | gzip >"$dst_path"
    return $?
}
open_wineprefix()
{
    if ! test_wineprefix_exists
    then
        message_wineprefix_not_exists
        return 1
    fi
    open "$WINEPREFIX"
    return $?
}

while getopts hgGosz f
do
case $f in
\?)
    usage
    exit 1
    ;;
h)
    usage
    exit 0
    ;;
g)
    : ${GRAPHICS:=mac}
    ;;
G)
    : ${GRAPHICS:=x11}
    ;;
o)
    open_wineprefix
    exit
    ;;
s)
    UNIX_PATH=
    ;;
z)
    backup_wineprefix
    exit
    ;;
esac
done
shift $(($OPTIND - 1))
set -- ${UNIX_PATH+start /unix} "$@"

check_timestamp
check_graphics

(($#)) || exit 0

exec $WINE "$@"
